@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-md-8">

       

        <h4 class="text-info add-top"><i class="fa fa-search"></i> Start searching</h4>
        <p class="text-muted">
            The demo use case we prepared for you is about Blog articles and bloggers.
            Leve the search term empty to see all data in the index.
        </p>

        <div class="row">
            <div class="col-md-6">

                <label class="add-top">Adaptive Facets</label>

                <form action="@Url.Action("SearchAdaptive")" method="Get">
                    <div class="input-group">
                        <input type="text" name="SearchTerm" autocomplete="off" placeholder="One or more search terms" class="form-control t-ahead" />
                        <span class="input-group-btn">
                            <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                        </span>
                    </div>
                </form>
            </div>

            <div class="col-md-6">

                <label class="add-top">Checkbox Facets</label>

                <form action="@Url.Action("SearchCheckboxed")" method="Get">
                    <div class="input-group">
                        <input type="text" name="SearchTerm" autocomplete="off" placeholder="One or more search terms" class="form-control t-ahead" />
                        <span class="input-group-btn">
                            <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                        </span>
                    </div>
                    </form>

            </div>
        </div>

        <script type="text/javascript">

            $(document).ready(function () {

                $('.t-ahead').typeahead({
                    source: function (query, process) {
                       
                        return $.ajax({
                            url:'@Url.Action("AutoSuggest")',
                            data: { 
                                SearchTerm:  query
                            },
                            success: function (data) {
                                return process(data.search_results);
                            },
                            cache: false
                        });
                    }
                });
            })
        </script>
        

        <h4 class="text-info" style="margin-top:40px;"><i class="fa fa-plus"></i> Add some data</h4>
        <p class="text-muted">
            Add a new <a href="#" onclick="$('#frmArticle').slideDown('slow');" class="btn btn-xs btn-default">Blog article</a> to the index.
        </p>

        @Html.Partial("_FormArticlePartial")

    </div>
    <div class="col-md-4">

        <div class="panel panel-default" style="padding:10px;">

            <img src="@Url.Content("~/Content/img/elasticsearch-logo.png")" style="height:80px;margin-right:10px;float:left;" alt="Elasticsarch Logo" />
            <strong>Elasticsearch &amp;
            <br /> Nest &amp;
            <br /> ASP.NET MVC 4</strong>
            
            <br style="clear:both;" />
            
        </div>

        <p>
            <strong>Elasticsearch</strong> allows you to build a comprehensive search experience with less efforts than e.g. SOLR.
            Using <strong>Nest's fluent interface</strong> you can cut down development time even further!
        </p>
        <p>
            Use this project as a playground for your first steps with either Elasticsearch or Nest...
        </p>


        <div class="alert alert-info add-top">
            <strong><i class="fa fa-info-circle"></i> Demo data</strong><br /> is defined in the content directory as JSON files.
        
            <div class="text-right">
                <a href="@Url.Action("ResetIndex")" class="btn btn-default btn-sm add-top" title="Clears all your additions to the index">Reset Index</a>
            </div>
            
        </div>
    </div>
</div>
